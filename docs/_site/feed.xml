<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-11-23T21:01:48+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">The Dev Talk Show</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Exploring .NET 6 LIVE - Post .NET Conf Wrap Up</title><link href="http://localhost:4000/2021/11/17/Exploring-.NET-6.html" rel="alternate" type="text/html" title="Exploring .NET 6 LIVE - Post .NET Conf Wrap Up" /><published>2021-11-17T00:00:00+00:00</published><updated>2021-11-17T00:00:00+00:00</updated><id>http://localhost:4000/2021/11/17/Exploring-.NET-6</id><content type="html" xml:base="http://localhost:4000/2021/11/17/Exploring-.NET-6.html">&lt;p&gt;.NET 6 was released at .NET Conf 2021 and we’re going to talk about new features, try it out live, and maybe explore some new features in IDEs that go with it.  There’s been a lot going on in this space and after .NET Conf we’ll have plenty of thoughts about it.&lt;br /&gt;&lt;br /&gt; We’d also love to know what you think and can’t wait to hear your ideas for what we should try.  We love to explore things live and learn together.&lt;br /&gt;&lt;br /&gt; .NET Conf 2021 is November 9-11: https://www.dotnetconf.net/.&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/wwOFy4aZSpw&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
    &lt;/iframe&gt;
  &lt;/div&gt;</content><author><name>Rich Ross</name></author><summary type="html">.NET 6 was released at .NET Conf 2021 and we’re going to talk about new features, try it out live, and maybe explore some new features in IDEs that go with it. There’s been a lot going on in this space and after .NET Conf we’ll have plenty of thoughts about it. We’d also love to know what you think and can’t wait to hear your ideas for what we should try. We love to explore things live and learn together. .NET Conf 2021 is November 9-11: https://www.dotnetconf.net/.</summary></entry><entry><title type="html">Live Coding - Automated Content Creation</title><link href="http://localhost:4000/2021/11/10/Automated-Content-Creation.html" rel="alternate" type="text/html" title="Live Coding - Automated Content Creation" /><published>2021-11-10T00:00:00+00:00</published><updated>2021-11-10T00:00:00+00:00</updated><id>http://localhost:4000/2021/11/10/Automated-Content-Creation</id><content type="html" xml:base="http://localhost:4000/2021/11/10/Automated-Content-Creation.html">&lt;p&gt;In an ongoing collection of ideas of how we can automate some of the routine tasks we need to do as a weekly live stream, we want to create a blog post as a follow-up to each show here on The Dev Talk Show.  the blog post contains the title, description, and link to the video on our YouTube archive.&lt;br /&gt;&lt;br /&gt;There are a number of different ways to do this and our current plan focuses on GitHub actions to do the heavy lifting.  Our data for the post is stored with the YouTube video so we will need to reach out to that service.  The custom GitHub Action will then pull this all together in a file and check this into the GitHub pages repo, which is where we host our blog.&lt;br /&gt;&lt;br /&gt;This will be a Live Coding session, so join us on Wed at 8:30 and see if we can pull this off or watch it go back into the backlog.  Either way, this will be fun to see.&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/xLPyxKDmL00&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
    &lt;/iframe&gt;
  &lt;/div&gt;</content><author><name>Rich Ross</name></author><summary type="html">In an ongoing collection of ideas of how we can automate some of the routine tasks we need to do as a weekly live stream, we want to create a blog post as a follow-up to each show here on The Dev Talk Show. the blog post contains the title, description, and link to the video on our YouTube archive.There are a number of different ways to do this and our current plan focuses on GitHub actions to do the heavy lifting. Our data for the post is stored with the YouTube video so we will need to reach out to that service. The custom GitHub Action will then pull this all together in a file and check this into the GitHub pages repo, which is where we host our blog.This will be a Live Coding session, so join us on Wed at 8:30 and see if we can pull this off or watch it go back into the backlog. Either way, this will be fun to see.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2021/07/29/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-07-29T01:43:40+00:00</published><updated>2021-07-29T01:43:40+00:00</updated><id>http://localhost:4000/jekyll/update/2021/07/29/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2021/07/29/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. Jekyll requires blog post files to be named according to the following format: YEAR-MONTH-DAY-title.MARKUP Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: def print_hi(name) puts &quot;Hi, #{name}&quot; end print_hi('Tom') #=&amp;gt; prints 'Hi, Tom' to STDOUT. Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.</summary></entry><entry><title type="html">Static Site Generation</title><link href="http://localhost:4000/2021/07/28/Static-Site-Generators.html" rel="alternate" type="text/html" title="Static Site Generation" /><published>2021-07-28T00:00:00+00:00</published><updated>2021-07-28T00:00:00+00:00</updated><id>http://localhost:4000/2021/07/28/Static-Site-Generators</id><content type="html" xml:base="http://localhost:4000/2021/07/28/Static-Site-Generators.html">&lt;p&gt;#Static Site Generation
by: Rich Ross&lt;/p&gt;

&lt;p&gt;Join us as we show how to build static web sites using web site generators.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=c_T_jNYDAQo&quot;&gt;video&lt;/a&gt;&lt;/p&gt;</content><author><name>Rich Ross</name></author><summary type="html">#Static Site Generation by: Rich Ross Join us as we show how to build static web sites using web site generators. video</summary></entry></feed>